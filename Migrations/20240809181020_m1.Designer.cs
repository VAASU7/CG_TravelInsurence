// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Travel_Insurance.Model;

#nullable disable

namespace Travel_Insurance.Migrations
{
    [DbContext(typeof(InsuranceCompanyContext))]
    [Migration("20240809181020_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Travel_Insurance.Model.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .HasColumnType("integer")
                        .HasColumnName("AgentID");

                    b.Property<string>("Department")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.HasKey("AgentId")
                        .HasName("PK__Agents__9AC3BFD12309DED6");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Claim1", b =>
                {
                    b.Property<int>("ClaimId")
                        .HasColumnType("integer")
                        .HasColumnName("ClaimID");

                    b.Property<decimal?>("ClaimAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ClaimDetails")
                        .HasColumnType("text");

                    b.Property<string>("ClaimStatus")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<DateTime?>("DateProcessed")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateSubmitted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("PolicyId")
                        .HasColumnType("integer")
                        .HasColumnName("PolicyID");

                    b.Property<string>("ProcessorComments")
                        .HasColumnType("text");

                    b.HasKey("ClaimId")
                        .HasName("PK__Claims__EF2E13BB86A1F247");

                    b.HasIndex("PolicyId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("CustomerID");

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.HasKey("CustomerId")
                        .HasName("PK__Customer__A4AE64B824C23CDC");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .HasColumnType("integer")
                        .HasColumnName("PaymentID");

                    b.Property<decimal?>("AmountPaid")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("ClaimId")
                        .HasColumnType("integer")
                        .HasColumnName("ClaimID");

                    b.Property<DateTime?>("PaymentDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("TransactionId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("TransactionID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payments__9B556A58497FBAEF");

                    b.HasIndex("ClaimId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .HasColumnType("integer")
                        .HasColumnName("PolicyID");

                    b.Property<string>("CoverageDetails")
                        .HasColumnType("text");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("integer")
                        .HasColumnName("CustomerID");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PolicyNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("character varying(20)");

                    b.Property<decimal?>("PremiumAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("PolicyId")
                        .HasName("PK__Policies__2E13394459265849");

                    b.HasIndex("CustomerId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Claim1", b =>
                {
                    b.HasOne("Travel_Insurance.Model.Policy", "Policy")
                        .WithMany("Claims")
                        .HasForeignKey("PolicyId")
                        .HasConstraintName("FK__Claims__PolicyID__29572725");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Payment", b =>
                {
                    b.HasOne("Travel_Insurance.Model.Claim1", "Claim")
                        .WithMany("Payments")
                        .HasForeignKey("ClaimId")
                        .HasConstraintName("FK__Payments__ClaimI__2C3393D0");

                    b.Navigation("Claim");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Policy", b =>
                {
                    b.HasOne("Travel_Insurance.Model.Customer", "Customer")
                        .WithMany("Policies")
                        .HasForeignKey("CustomerId")
                        .HasConstraintName("FK__Policies__Custom__267ABA7A");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Claim1", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Customer", b =>
                {
                    b.Navigation("Policies");
                });

            modelBuilder.Entity("Travel_Insurance.Model.Policy", b =>
                {
                    b.Navigation("Claims");
                });
#pragma warning restore 612, 618
        }
    }
}
